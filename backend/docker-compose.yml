services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    platform: linux/amd64
    container_name: education_platform_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: education_platform
      MYSQL_USER: nestjs_user
      MYSQL_PASSWORD: nestjs_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - education_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: education_platform_app
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: "mysql://root:rootpassword@mysql:3306/education_platform"
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      PORT: 3000
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - education_network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # phpMyAdmin (Optional - for database management)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    platform: linux/amd64
    container_name: education_platform_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: nestjs_user
      PMA_PASSWORD: nestjs_password
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - education_network

volumes:
  mysql_data:

networks:
  education_network:
    driver: bridge
